package GameStart
import PlayerData
import TileInit
import ReviveCircle
import Entity
import Escaper
import Area
import CreepInit



public function startGame()
	startEntityLoop()
	let startleft = vec2(AREA_LEFT_BOT.zero.x + startIndex * 128. +64, AREA_LEFT_BOT.zero.y+64)
	let startright = vec2(AREA_RIGHT_BOT.zero.x + startIndex * 128. +64, AREA_RIGHT_BOT.zero.y+64)
	for i = 0 to 11
		if pData[i] != null
			if i < 6
				pData[i].p..select((new Escaper(startleft, pData[i].p)).actor)..panCamToTimed(pData[i].escaper.actor, 0.)
			else
				pData[i].p..select((new Escaper(startright, pData[i].p)).actor)..panCamToTimed(pData[i].escaper.actor, 0.)

function initGame()
	let t = GetExpiredTimer()
	print("init started......")
	print("init PlayerData...")
	initPlayerData()
	print("init PlayerData...done!")
	print("init Revive.......")
	initReviveCircles()
	print("init Revive.......done!")
	print("init Areas........")
	initAreas()
	print("init Areas........done!")
	// Last init, then maze genration
	print("init Tiles........")
	t.start(0.01, function initTiles)
	print("init Tiles........done!")
	

init
	let t = getTimer()
	t.start(0.01, function initGame)